

/* Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */


/* This file is automatically generated using the gen_nonblock_bindings.py tool */

#ifndef INCLUDED_GR_BLOCK_GATEWAY_PYTHON_HPP
#define INCLUDED_GR_BLOCK_GATEWAY_PYTHON_HPP

#include <gnuradio/block_gateway.h>

void bind_block_gateway(py::module& m)
{
    using block_gateway    = gr::block_gateway;

    py::class_<block_gw_message_type, std::shared_ptr<block_gw_message_type>>(m, "block_gw_message_type")
        .def(py::init<gr::block_gw_message_type const &>(),
           py::arg("arg0") 
        )
        .def(py::init<>())
        ;

    py::class_<block_gateway, std::shared_ptr<block_gateway>>(m, "block_gateway")
        .def(py::init<gr::block_gateway const &>(),
           py::arg("arg0") 
        )
        .def(py::init<>())
        .def("block_message",&block_gateway::block_message)
        .def("block__unique_id",&block_gateway::block__unique_id)
        .def("block__name",&block_gateway::block__name)
        .def("block__history",&block_gateway::block__history)
        .def("block__set_history",&block_gateway::block__set_history,
            py::arg("history") 
        )
        .def("block__set_fixed_rate",&block_gateway::block__set_fixed_rate,
            py::arg("fixed_rate") 
        )
        .def("block__fixed_rate",&block_gateway::block__fixed_rate)
        .def("block__set_output_multiple",&block_gateway::block__set_output_multiple,
            py::arg("multiple") 
        )
        .def("block__set_min_output_buffer",&block_gateway::block__set_min_output_buffer,
            py::arg("port"), 
            py::arg("size") 
        )
        .def("block__set_min_output_buffer",&block_gateway::block__set_min_output_buffer,
            py::arg("size") 
        )
        .def("block__max_output_buffer",&block_gateway::block__max_output_buffer,
            py::arg("i") 
        )
        .def("block__set_max_output_buffer",&block_gateway::block__set_max_output_buffer,
            py::arg("max_output_buffer") 
        )
        .def("block__set_max_output_buffer",&block_gateway::block__set_max_output_buffer,
            py::arg("port"), 
            py::arg("max_output_buffer") 
        )
        .def("block__output_multiple",&block_gateway::block__output_multiple)
        .def("block__consume",&block_gateway::block__consume,
            py::arg("which_input"), 
            py::arg("how_many_items") 
        )
        .def("block__consume_each",&block_gateway::block__consume_each,
            py::arg("how_many_items") 
        )
        .def("block__produce",&block_gateway::block__produce,
            py::arg("which_output"), 
            py::arg("how_many_items") 
        )
        .def("block__set_relative_rate",&block_gateway::block__set_relative_rate,
            py::arg("relative_rate") 
        )
        .def("block__set_inverse_relative_rate",&block_gateway::block__set_inverse_relative_rate,
            py::arg("inverse_relative_rate") 
        )
        .def("block__set_relative_rate",&block_gateway::block__set_relative_rate,
            py::arg("interpolation"), 
            py::arg("decimation") 
        )
        .def("block__relative_rate",&block_gateway::block__relative_rate)
        .def("block__relative_rate_i",&block_gateway::block__relative_rate_i)
        .def("block__relative_rate_d",&block_gateway::block__relative_rate_d)
        .def("block__nitems_read",&block_gateway::block__nitems_read,
            py::arg("which_input") 
        )
        .def("block__nitems_written",&block_gateway::block__nitems_written,
            py::arg("which_output") 
        )
        .def("block__tag_propagation_policy",&block_gateway::block__tag_propagation_policy)
        .def("block__set_tag_propagation_policy",&block_gateway::block__set_tag_propagation_policy,
            py::arg("p") 
        )
        .def("block__add_item_tag",&block_gateway::block__add_item_tag,
            py::arg("which_output"), 
            py::arg("tag") 
        )
        .def("block__add_item_tag",&block_gateway::block__add_item_tag,
            py::arg("which_output"), 
            py::arg("abs_offset"), 
            py::arg("key"), 
            py::arg("value"), 
            py::arg("srcid") = pmt::get_PMT_F() 
        )
        .def("block__get_tags_in_range",&block_gateway::block__get_tags_in_range,
            py::arg("which_input"), 
            py::arg("abs_start"), 
            py::arg("abs_end") 
        )
        .def("block__get_tags_in_range",&block_gateway::block__get_tags_in_range,
            py::arg("which_input"), 
            py::arg("abs_start"), 
            py::arg("abs_end"), 
            py::arg("key") 
        )
        .def("block__get_tags_in_window",&block_gateway::block__get_tags_in_window,
            py::arg("which_input"), 
            py::arg("rel_start"), 
            py::arg("rel_end") 
        )
        .def("block__get_tags_in_window",&block_gateway::block__get_tags_in_window,
            py::arg("which_input"), 
            py::arg("rel_start"), 
            py::arg("rel_end"), 
            py::arg("key") 
        )
        .def("block__message_port_register_in",&block_gateway::block__message_port_register_in,
            py::arg("port_id") 
        )
        .def("block__message_port_register_out",&block_gateway::block__message_port_register_out,
            py::arg("port_id") 
        )
        .def("block__message_port_pub",&block_gateway::block__message_port_pub,
            py::arg("port_id"), 
            py::arg("msg") 
        )
        .def("block__message_port_sub",&block_gateway::block__message_port_sub,
            py::arg("port_id"), 
            py::arg("target") 
        )
        .def("block__message_port_unsub",&block_gateway::block__message_port_unsub,
            py::arg("port_id"), 
            py::arg("target") 
        )
        .def("block__message_subscribers",&block_gateway::block__message_subscribers,
            py::arg("which_port") 
        )
        .def("block__message_ports_in",&block_gateway::block__message_ports_in)
        .def("block__message_ports_out",&block_gateway::block__message_ports_out)
        .def("set_msg_handler_feval",&block_gateway::set_msg_handler_feval,
            py::arg("which_port"), 
            py::arg("msg_handler") 
        )
        ;

} 

#endif /* INCLUDED_GR_BLOCK_GATEWAY_PYTHON_HPP */
