

/* Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */


/* This file is automatically generated using the gen_nonblock_bindings.py tool */

#ifndef INCLUDED_GR_BLOCKS_VECTOR_INSERT_PYTHON_HPP
#define INCLUDED_GR_BLOCKS_VECTOR_INSERT_PYTHON_HPP

#include <gnuradio/blocks/vector_insert.h>

template<typename T>
void bind_vector_insert_template(py::module& m, const char *classname)
{
    using vector_insert      = gr::blocks::vector_insert<T>;

    py::class_<vector_insert, gr::block, std::shared_ptr<vector_insert>>(m, classname)
        .def(py::init(&gr::blocks::vector_insert<T>::make),
            py::arg("data"),
            py::arg("periodicity"),
            py::arg("offset") = 0
        )
        .def("rewind", &vector_insert::rewind)
        .def("set_data", &vector_insert::set_data,
            py::arg("set_data")
        )

        .def("to_basic_block",[](std::shared_ptr<vector_insert> p){
            return p->to_basic_block();
        })
        ;

} 

void bind_vector_insert(py::module& m)
{
    bind_vector_insert_template<std::uint8_t>(m,"vector_insert_b");
    bind_vector_insert_template<std::int16_t>(m,"vector_insert_s");
    bind_vector_insert_template<std::int32_t>(m,"vector_insert_i");
    bind_vector_insert_template<float>(m,"vector_insert_f");
    bind_vector_insert_template<gr_complex>(m,"vector_insert_c");
} 

#endif /* INCLUDED_GR_BLOCKS_VECTOR_INSERT_PYTHON_HPP */
