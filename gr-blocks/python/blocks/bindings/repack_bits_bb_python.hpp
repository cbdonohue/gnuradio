

/* Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */


/* This file is automatically generated using the gen_nonblock_bindings.py tool */

#ifndef INCLUDED_GR_BLOCKS_REPACK_BITS_BB_PYTHON_HPP
#define INCLUDED_GR_BLOCKS_REPACK_BITS_BB_PYTHON_HPP

#include <gnuradio/blocks/repack_bits_bb.h>

void bind_repack_bits_bb(py::module& m)
{
    using repack_bits_bb    = gr::blocks::repack_bits_bb;


    py::class_<repack_bits_bb,  tagged_stream_block,
        std::shared_ptr<repack_bits_bb>>(m, "repack_bits_bb")

        .def(py::init(&repack_bits_bb::make),
           py::arg("k"), 
           py::arg("l") = 8, 
           py::arg("tsb_tag_key") = "", 
           py::arg("align_output") = false, 
           py::arg("endianness") = ::gr::endianness_t::GR_LSB_FIRST 
        )
        

        .def("set_k_and_l",&repack_bits_bb::set_k_and_l,
            py::arg("k"), 
            py::arg("l") 
        )

        ;


} 

#endif /* INCLUDED_GR_BLOCKS_REPACK_BITS_BB_PYTHON_HPP */
