

/* Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */


/* This file is automatically generated using the gen_nonblock_bindings.py tool */

#ifndef INCLUDED_GR_BLOCKS_UNPACK_K_BITS_PYTHON_HPP
#define INCLUDED_GR_BLOCKS_UNPACK_K_BITS_PYTHON_HPP

#include <gnuradio/blocks/unpack_k_bits.h>

void bind_unpack_k_bits(py::module& m)
{
    using unpack_k_bits    = gr::blocks::unpack_k_bits;


    py::class_<unpack_k_bits, std::shared_ptr<unpack_k_bits>>(m, "unpack_k_bits")
        .def(py::init<unsigned int>(),
           py::arg("k") 
        )
        .def(py::init<gr::blocks::kernel::unpack_k_bits const &>(),
           py::arg("arg0") 
        )
        .def("unpack",&unpack_k_bits::unpack,
            py::arg("bits"), 
            py::arg("bytes"), 
            py::arg("nbytes") 
        )
        .def("unpack_rev",&unpack_k_bits::unpack_rev,
            py::arg("bits"), 
            py::arg("bytes"), 
            py::arg("nbytes") 
        )
        .def("k",&unpack_k_bits::k)

        ;


} 

#endif /* INCLUDED_GR_BLOCKS_UNPACK_K_BITS_PYTHON_HPP */
